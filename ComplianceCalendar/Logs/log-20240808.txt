2024-08-08 09:24:15.521 +05:30 [ERR] Failed executing DbCommand (13ms) [Parameters=[@__adminIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT e."EmployeeId", a."DepartmentId", a."Id", e."Email", e."EmpName"
FROM employees AS e
LEFT JOIN assignedto AS a ON e."EmployeeId" = a."EmpId"
WHERE e."EmployeeId" = ANY (@__adminIds_0)
ORDER BY e."EmployeeId"
2024-08-08 09:24:15.554 +05:30 [ERR] An exception occurred while iterating over the results of a query for context type 'ComplianceCalendar.Data.APIContext'.
Npgsql.PostgresException (0x80004005): 42703: column a.Id does not exist

POSITION: 42
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42703
    MessageText: column a.Id does not exist
    Position: 42
    File: parse_relation.c
    Line: 3718
    Routine: errorMissingColumn
Npgsql.PostgresException (0x80004005): 42703: column a.Id does not exist

POSITION: 42
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42703
    MessageText: column a.Id does not exist
    Position: 42
    File: parse_relation.c
    Line: 3718
    Routine: errorMissingColumn
2024-08-08 09:27:13.189 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 09:28:28.515 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 09:28:45.501 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 10:04:11.818 +05:30 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-08-08 10:04:11.895 +05:30 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-08-08 10:04:11.895 +05:30 [INF] Quartz Scheduler created
2024-08-08 10:04:11.895 +05:30 [INF] RAMJobStore initialized.
2024-08-08 10:04:11.896 +05:30 [INF] Quartz Scheduler 3.11.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-08-08 10:04:11.896 +05:30 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-08-08 10:04:11.896 +05:30 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-08-08 10:04:11.896 +05:30 [INF] JobFactory set to: ComplianceCalendar.Services.Scheduler.SchedulerJobFactory
2024-08-08 10:04:11.936 +05:30 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-08-08 10:04:35.866 +05:30 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-08-08 10:04:37.625 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 10:04:38.125 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-08-08 10:04:39.801 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 10:05:07.730 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 10:05:11.365 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 10:05:24.456 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 10:06:08.925 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 11:16:29.461 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 11:34:01.217 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 14:34:45.397 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 14:34:57.587 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 14:45:35.444 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 15:15:50.820 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 15:36:13.619 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 15:37:05.461 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:27.369 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:28.533 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:28.954 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:29.725 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:29.997 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:30.228 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:30.467 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:30.728 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:30.955 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:38:31.192 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2023
2024-08-08 15:38:31.434 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2023
2024-08-08 15:38:31.635 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2023
2024-08-08 15:38:31.888 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2023
2024-08-08 15:38:32.102 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2023
2024-08-08 15:38:56.501 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 15:38:57.431 +05:30 [INF] GetUsers called with id: 2
2024-08-08 15:38:57.439 +05:30 [INF] GetDepartmentNamesByEmployeeId endpoint called with employeeId: 2
2024-08-08 15:38:57.513 +05:30 [INF] Departments retrieved successfully for employeeId: 2
2024-08-08 15:38:58.361 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:39:00.405 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:39:01.466 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:39:08.569 +05:30 [INF] GetUsers called with id: 2
2024-08-08 15:39:08.569 +05:30 [INF] GetDepartmentNamesByEmployeeId endpoint called with employeeId: 2
2024-08-08 15:39:08.593 +05:30 [INF] Departments retrieved successfully for employeeId: 2
2024-08-08 15:39:19.330 +05:30 [INF] GetDepartmentEmployeeDTO called
2024-08-08 15:39:20.681 +05:30 [INF] GetAdminFilings called with employeeId: 2, year: 2024
2024-08-08 15:39:31.639 +05:30 [INF] GetDepartmentEmployeeDTO called
